/**
 * TieredRate.js v0.0.1
 */
var TieredRate=function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p="",b(0)}([function(a,b,c){function d(a){this.tiers=a,a.forEach(function(b,c){if(0===c&&b.from)throw new Error("You should not specify from on the first range");if(c===a.length-1&&b.to)throw new Error("You should not specify to on the last range")})}d.prototype.getOriginalPrice=function(a){for(var b=this.tiers.length-1;b>=0;b--){var c=this.tiers[b],d=c.rate+1;if(!c.from)return a/d;if(c.to&&this.getTieredPrice(c.from)<=a&&this.getTieredPrice(c.to)>=a)return(a-this.getTieredPrice(c.from))/d+(c.from?c.from:0);if(this.getTieredPrice(c.from)<=a)return(a-this.getTieredPrice(c.from))/d+c.from}},d.prototype.getTieredPrice=function(a){var b=0;return this.tiers.forEach(function(c){var d=c.rate+1;if(c.to&&!c.from)b+=a>=c.to?c.to*d:a*d;else if(c.from&&c.to)a>=c.to?b+=(c.to-c.from)*d:a>c.from&&(b+=(a-c.from)*d);else if(c.from&&!c.to)a>c.from&&(b+=(a-c.from)*d);else{if(c.from||c.to)throw new Error("Range issue");b+=a*d}}),b},a.exports=d}]);